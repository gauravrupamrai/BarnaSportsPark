service: backend
frameworkVersion: "3"

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-finch

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 128
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  apiName: UserSignupLoginApi
  endpointType: REGIONAL
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:* # Allows all SES actions
      Resource: "*" # Allows all resources
  apiGateway:
    apiKeys:
      - bspSignupLogin
      - ${opt:stage, 'dev'}-bspSignupLogin
    usagePlan:
      quota:
        limit: 5000
        offset: 2
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100

custom:
  client:
    bucketName: barnasportspark.com
    bucketRegion: eu-west-1
    distributionFolder: ../frontend/build
    indexDocument: index.html


functions:
  ## Health Check function
  signupLogin:
    handler: src/apis/signupLogin.handler
    memorySize: 256
    events:
      - http:
          path: /health
          method: GET
          cors: true
          private: true
      - http:
          path: /register
          method: POST
          cors: true
          private: true
      - http:
          path: /login
          method: POST
          cors: true
          private: true
      - http:
          path: /verify
          method: POST
          cors: true
          private: false
      - http:
          path: /activate
          method: GET
          cors: true
          private: false
      - http:
          path: /reset-password-request
          method: POST
          cors: true
          private: true
      - http:
          path: /reset-password
          method: POST
          cors: true
          private: true
    timeout: 90

  ## Email Function
  adminFunctions:
    handler: src/apis/adminFunctions.handler
    events:
      - http:
          path: /sendCustomEmail
          method: POST
          cors: true
          private: true
      - http:
          path: /create-notice
          method: POST
          cors: true
          private: true
      - http:
          path: /get-notices
          method: GET
          cors: true
          private: true
      - http:
          path: /get-notice-for-home
          method: GET
          cors: true
          private: true
      - http:
          path: /get-emails
          method: GET
          cors: true
          private: true
    timeout: 90


  userFunctions:
    handler: src/apis/userFunctions.handler
    events:
      - http:
          path: /user-profile-update
          method: POST
          cors: true
          private: true
      - http:
          path: /user-profile-info
          method: GET
          cors: true
          private: true
      - http:
          path: /user-new-membership
          method: POST
          cors: true
          private: true
      - http:
          path: /user-membership-webhook
          method: POST
          cors: true
          private: false
      - http:
          path: /get-court-booking
          method: POST
          cors: true
          private: true
      - http:
          path: /user-court-booking
          method: POST
          cors: true
          private: true
    timeout: 90

  externalConn:
    handler: src/apis/externalConn.handler
    events:
      - http:
          path: send-Email
          method: POST
          cors: true
          private: true